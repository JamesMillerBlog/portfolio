(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _ux = require('./modules/ux.js');

$(document).ready(function () {
	(0, _ux.start)(); // start pc experience
});

},{"./modules/ux.js":4}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setup = undefined;

var _heroTextAnimations = require("./heroTextAnimations.js");

var heroText = _interopRequireWildcard(_heroTextAnimations);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// animation set up
var setup = exports.setup = function setup() {
  var _loop = function _loop(x) {
    // check if a portfolio item has been hovered on
    $(".item" + x).hover(function () {
      // if any item other than the center has been selected, transition between animation classes to move background
      if (x != 4) $(".grid-container").toggleClass("item" + x + "scroll");
      // else if the chosen is selected
      else {
          // reveal icons
          $(".item4 .unlocked").addClass("active");
          // trigger the heroText to animate
          heroText.animate();
        }
      // check if a portfolio item has been hovered out
    }, function () {
      // if any item other than the center has been selected, transition between animation classes to move background
      if (x != 4) $(".grid-container").toggleClass("item" + x + "scroll");
      // else if the chosen is selected
      else {
          //trigger the heroText to animate
          $(".item4 .unlocked").removeClass("active");
        }
    });
  };

  // for each portfolio item
  for (var x = 0; x < $(".grid-container").children().length; x++) {
    _loop(x);
  }
}; // import heroText animations

},{"./heroTextAnimations.js":3}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var animate = exports.animate = function animate() {
	// on hero text hover
	$(".herotext").hover(function () {
		// if no icons have been revealed yet, allow mail animation to activate
		if ($(this).hasClass("start")) startAnimation(this, 0);
		// if all mail text has been scrolled over, allow linkedin animation to activate
		else if ($(this).hasClass("mailrevealed") && $('.start').length == 0) startAnimation(this, 1);
			// if all linkedin text has been scrolled over, allow github animation to activate
			else if ($(this).hasClass("linkedinrevealed") && $('.mailrevealed').length == 0) startAnimation(this, 2);
				// if all github text has been scrolled over, allow twitter animation to activate
				else if ($(this).hasClass("githubrevealed") && $('.linkedinrevealed').length == 0) startAnimation(this, 3);
					// if all twitter text has been scrolled over, allow instagram animation to activate
					else if ($(this).hasClass("twitterrevealed") && $('.githubrevealed').length == 0) startAnimation(this, 4);
						// if all instagram text has been scrolled over, allow pinterest animation to activate
						else if ($(this).hasClass("instagramrevealed") && $('.twitterrevealed').length == 0) startAnimation(this, 5);
	});
};

var animationConfig = {
	addAnimation: ['animatestart', 'animatelinkedin', 'animategithub', 'animatetwitter', 'animateinstagram', 'animatepinterest'],
	removeAnimation: ['start animatestart', 'animatelinkedin', 'animategithub', 'animatetwitter', 'animateinstagram', 'animatepinterest'],
	revealedIcon: ['mailrevealed', 'linkedinrevealed', 'githubrevealed', 'twitterrevealed', 'instagramrevealed', 'pinterestrevealed'],
	unlockedIcon: ['mail', 'linkedin', 'github', 'twitter', 'instagram', 'pinterest']

};

var startAnimation = function startAnimation(scrolled, trigger) {
	// add the 1st animation style
	$(scrolled).addClass(animationConfig.addAnimation[trigger]);
	$(scrolled).on('webkitAnimationEnd oanimationend msAnimationEnd animationend', function (e) {
		// remove this animation style and class
		$(scrolled).removeClass(animationConfig.removeAnimation[trigger]);
		// if already scrolled over, remove previous scrolled class
		if (trigger > 0) $(scrolled).removeClass(animationConfig.revealedIcon[trigger - 1]);
		// add the next animation class
		$(scrolled).addClass(animationConfig.revealedIcon[trigger]);
		// if all items have been scrolled over, unlock mail icon
		if ($('.' + animationConfig.revealedIcon[trigger]).length == $('.herotext').length - 1) $('.item4 .' + animationConfig.unlockedIcon[trigger] + '.icon').addClass('unlocked active');
	});
};

// let startAnimation = (scrolled) => {
// 	// add the 1st animation style
// 	$(scrolled).addClass('animatestart');
// 	// once this animation ends
// 	$(scrolled).on('webkitAnimationEnd oanimationend msAnimationEnd animationend', function(e) {
// 		// remove this animation style and class
//     	$(scrolled).removeClass('start animatestart');
//     	// add the next animation class
//     	$(scrolled).addClass('mailrevealed');
//     	// if all items have been scrolled over, unlock mail icon
//     	if($('.mailrevealed').length == $('.herotext').length-1) $('.item4 .mail.icon').addClass('unlocked active');
//     });
// }

// let linkedinAnimation = (scrolled) => {
// 	// add the 1st animation style
// 	$(scrolled).addClass('animatelinkedin');
// 	$(scrolled).on('webkitAnimationEnd oanimationend msAnimationEnd animationend', function(e) {
// 		// remove this animation style and class
//     	$(scrolled).removeClass('animatelinkedin');
//     	// add the next animation class
//     	$(scrolled).addClass('linkedinrevealed');
//     	// if all items have been scrolled over, unlock mail icon
//     	if($('.linkedinrevealed').length == $('.herotext').length-1) $('.item4 .linkedin.icon').addClass('unlocked active');
//     });
// }

},{}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.start = start;

var _animation = require('./animation');

var animation = _interopRequireWildcard(_animation);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function start() {
	animation.setup();
} // import { content } from './content';

},{"./animation":2}]},{},[1]);
