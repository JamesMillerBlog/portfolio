

//** SET UP ALL VARIABLES **//

//setting up mobile device if statements by detecting touch availability
var has_touch = 'ontouchstart' in document.documentElement;
//adjust the below variables to select mobiles and tablets
var isTablet = /Tablet|ipad/i.test(navigator.userAgent.toLowerCase()); 
var isMobile = /webos|iphone|blackberry|ipod|android. +mobile|windows phone/i.test(navigator.userAgent.toLowerCase());
//variables for determining mouse pos
var x, y, currentPosX, currentPosY;
//movement strength of background
var movementStrength = 10;
// variables for resizing navigation images
var backgroundWSize, backgroundHSize, backgroundWPos, backgroundHPos, smallHitboxWSize, smallHitboxHSize, largeHitboxWSize, largeHitboxHSize, medHitboxWSize, medHitboxHSize;
// variables for resizing the home page when nav images are scrolled over/out
var outerBtnHolderWSize,outerBtnHolderHSize, innerBtnHolderHSize, newouterBtnHolderWSize, newInnerBtnHolderHSize, newouterBtnHolderHSize, innerBtnHolderTop, outerBtnHolderTop, newInnerBtnHolderTop;
// global variables for window sizes
var windowSizeWidth, windowSizeHeight;
// boolean to detect in navigation images are animated once hovered over/out
var isAnimating = false;
// variable to check what is being hovered on, set up automatically as container
var isHover = 'container';
// math to decide movement distance that the container will animate once nav buttons are hovered over/out
var shortMovement = 1.22, mediumMovement = 1.28, longMovement = 1.29; 
// store selected navigation image here
var image;
// store the last scrolled item
var lastScrolled = 'newUser';
var lastVideo;
// store home page size to determine navigation movement distance
var backgroundWMover, backgroundHMover;
// math to decide button positions within the home page, every mouse movement
var rightPosMath = 1.57, bottomPosMath = 1.73, topPosMath = 3.22, leftPosMath = 3.94;
// store values to decide the size of selected and non selected nav buttons
var growBackgroundWSize, shrinkBackgroundWSize;
var v = document.createElement("video");
var divCenter;
var middleImagesHeight, newMiddleImagesHeight;
var clickedVideo = false;
var portfolioMovePosX;
var portfolioMovePosY;

//math to decide pages positions every mouse movement
var topPagePos, bottomPagePos, leftPagePos, rightPagePos, bottomPagePos, leftCornerPos, rightCornerPos, centralPos, middlePagePos;
var desktopImageSizes, smallDesktopImageSizes, tabletImageSizes, mobileImageSizes, imageResizingArr;
var imageSizeVariables = [topPagePos, leftPagePos, rightPagePos, bottomPagePos, leftCornerPos, rightCornerPos, centralPos, middlePagePos, largeHitboxHSize, largeHitboxWSize, medHitboxWSize,smallHitboxHSize,smallHitboxWSize];
var greaterThanResizer = [1024,900,551,0];
var lesserThanResizer = [99999999,1024,900,550];
var backgroundWImageResizerArr = [7,7,5,3.3];
var backgroundHImageResizerArr = [5,6,7,3.5];
var navHeight = [imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[11], imageSizeVariables[11], imageSizeVariables[8]];
var navWidth, navMarginLeft, navMarginTop;


// Inject YouTube API script asynchronously
var tag = document.createElement('script');
tag.src = "//www.youtube.com/player_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
// a counter to see how many videos have been loaded
var isLoaded = 0;
//boolean to allow videos to be played once loaded
var isReady = false;
//the number of videos that will be loaded
var videoList;
//video players are stored in this array
var players = [];
var myPlayerState;
var fullScreenCounter = 0;




//** LOAD IN ALL IMAGES **//

$( document ).ready(function() {
	console.log( "ready!" );
		// (function($){
		    $.fn.bgLoaded = function(custom) {
		        var self = this;

			    // Default plugin settings
			    var defaults = {
			        afterLoaded : function(){
			            this.addClass('bg-loaded');
			        }
			    };

			    // Merge default and user settings
			    var settings = $.extend({}, defaults, custom);

				    // console.log("you're all penus's")
			    // Loop through element
			    self.each(function(){
			        var $this = $(this),
			            bgImgs = $this.css('background-image').split(', ');
			        $this.data('loaded-count',0);

			        $.each( bgImgs, function(key, value){
			            var img = value.replace(/^url\(["']?/, '').replace(/["']?\)$/, '');
			            $('<img/>').attr('src', img).load(function() {
			                $(this).remove(); // prevent memory leaks
			                $this.data('loaded-count',$this.data('loaded-count')+1);
			                if ($this.data('loaded-count') >= bgImgs.length) {
			                    settings.afterLoaded.call($this);
			                }
			            });
			        });

			    });
		    };
});



//** VIDEO LOGIC **//

//loop through each iframe and create a video player for it
function onYouTubeIframeAPIReady() {
  var iframes = document.querySelectorAll('iframe')
  for(videoList = 0; videoList < iframes.length;videoList++) {
    players[videoList] = createPlayer(iframes[videoList]);
  }   
}
//create a player and call a function when its ready to play
function createPlayer(playerInfo) {
    return new YT.Player(playerInfo.id, {
       events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange      
       }
    });
}
//when its ready to be played make sure that all the other videos are loaded, and then allow users to play the videos
function onPlayerReady(event){
  //bind events
  isLoaded++;
  event.target.mute();
  if(isLoaded == videoList){
    console.log("videos ready");
    isReady = true;
  } 
}
//loop through and pause all videos
function pauseAllVideos(){
  for(var x = 0; x < videoList; x++){
    players[x].pauseVideo();
  }
}

function onPlayerStateChange(event) {
  myPlayerState = event.data;
  if (isHover!= 'container' && isReady == true) animateIn();
}


function fullScreen (element){
  console.log('video = ' + element);
  if(element.requestFullScreen) {
    element.requestFullScreen();
  } else if(element.webkitRequestFullScreen ) {
    element.webkitRequestFullScreen();
  } else if(element.mozRequestFullScreen) {
    element.mozRequestFullScreen();
  }
}
$(document).on('webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange', fn);

function fn(){
  fullScreenCounter++;
  if(fullScreenCounter == 1) {
    players[lastVideo].unMute().seekTo(0).playVideo();
  }
  if(fullScreenCounter == 2) {
    clickedVideo = false;
    fullScreenCounter = 0;
    players[lastVideo].mute();
  }
}



// TO DO ON PLANE
// - MAKE ALL ASSETS FOR NEW DESIGN (new html5 video + mood tree)

// Make full screen videos work on tablet and mobile (request full screen not working on tablet/mobile, if doesn't work then reveal iframe and allow them to click to start experience)
// fix check positions not updating when screen size is changed (maybe add short time delay?)
// make sure videos look good on all screen sizes
//Finish all designs (animated creative technology, all gifs)

//1. Check if html5 vid is supported + animate design and nav buttons upon page load (fix bug upon page load, some time delay is triggering after animation is finished?)
//2. Acknowledge videos loading in some way, perhaps animate everything in to opacity 1 from 0 (when isready == true)
//3. Annotate / tidy js
//4. fix all bugs (check on different browsers with Kerve browser stack login details)
//5. do css for large desktop screens

//** MAIN SECTION OF LOGIC **//

//on document ready
$( document ).ready(function() {
	//when all navigation images are loaded, call checkPositions()
	$('.backgroundImage').imagesLoaded()
	.done( function( instance ) {
	    console.log('all images successfully loaded');
      	checkPositions();
  	});
	
	// when browser is resized, call checkPositions()
	$(window).resize(checkPositions);
	$(window).on( "orientationchange", function( event ) {
		checkPositions();
	});

	//** CHECK POSITIONS **//
	function checkPositions()
	{
		//update window sizes
	    windowSizeWidth = $(window).width();
		windowSizeHeight = $(window).height();
		//remove first two variables in array
	    // set size + position of each page within the website container
		$('#homepage').css({'margin-left': windowSizeWidth + 'px', 'margin-top': windowSizeHeight + 'px'});
		// set size + position of background
		$('#container').css({'height':windowSizeHeight*3 +'px ', 'width':windowSizeWidth*3 + 'px', 'margin-left': '-'+windowSizeWidth + 'px', 'margin-top': '-'+windowSizeHeight + 'px', 'opacity': 1}); 	
		//Find 37% of the size of the home page to use for movement calculations of navigation scroll overs
		backgroundWMover = $('#homepage').width()*.375, backgroundHMover = $('#homepage').height()*.375;
		//for each screen size (4), call the checkSize function
		for(var windowResizeNumber = 0;windowResizeNumber < greaterThanResizer.length; windowResizeNumber++) checkSize(windowResizeNumber); 
		
		//** CHECK SIZE OF SCREEN + LOAD NEW SIZES **//
		function checkSize(x){
			//based on what screen size you are on, load in different arrays that resize the divs on the screen
			if(windowSizeWidth > greaterThanResizer[x] && windowSizeWidth < lesserThanResizer[x]) {
				//set the size of all the gifs
				backgroundWSize = $('#homepage').width()/backgroundWImageResizerArr[x], backgroundHSize = $('#homepage').height()/backgroundHImageResizerArr[x];
				//load in desktop sizes
				desktopImageSizes = [/*topPagePos*/0.5, /*leftPagePos*/ .76, /*rightPagePos*/ 1.675, /*bottomPagePos*/ 1.7, /*leftCornerPos*/ 1.5, /*rightCornerPos*/ 1.734, /*centralPos*/ 1.272, /*middlePagePos*/ 1.32, /*large hitbox height */ backgroundHSize*4, /*large hitbox width */ backgroundWSize*4, /*med hitbox width */backgroundWSize*3, /*small hitbox height */backgroundHSize * 1.8, /*small hitbox width */backgroundWSize * 2];
				//load in small desktop sizes
				smallDesktopImageSizes = [/*topPagePos*/0.58, /*leftPagePos*/.72, /*rightPagePos*/1.72, /*bottomPagePos*/ 1.74, /*leftCornerPos*/1.5, /*rightCornerPos*/ 1.77,/*centralPos*/ 1.4,/*middlePagePos*/1.345,/*large hitbox height */backgroundHSize*4, /*large hitbox width */backgroundWSize*4,/*med hitbox width */backgroundWSize *1.5, /*small hitbox height */backgroundHSize * 1.8, /*small hitbox width */ backgroundWSize * 2];
				//load in tablet sizes
				tabletImageSizes = [/*topPagePos*/ 0.65, /*leftPagePos*/.42, /*rightPagePos*/ 1.78, /*bottomPagePos*/1.75,/*leftCornerPos*/2.3,/*rightCornerPos*/ 1.77,/*centralPos*/ 1.4,/*middlePagePos*/1.375,/*large hitbox height */backgroundHSize*4,/*large hitbox width */backgroundWSize*4,/*med hitbox width */backgroundWSize,/*small hitbox height */backgroundHSize * 1.8, /*small hitbox width */ backgroundWSize * 2];
				//load in mobile sizes
				mobileImageSizes = [/*topPagePos*/.22,/*leftPagePos*/.42,/*rightPagePos*/1.78, /*bottomPagePos*/1.635,/*leftCornerPos*/8,/*rightCornerPos*/1.66,/*centralPos*/1.348,/*middlePagePos*/1.375,/*large hitbox height */backgroundHSize*4,/*large hitbox width */backgroundWSize*4,/*med hitbox width */backgroundWSize, /*small hitbox height */backgroundHSize * 1.8, /*small hitbox width */ backgroundWSize,1.348];
				//store all loaded arrays into a larger array
				imageResizingArr = [desktopImageSizes, smallDesktopImageSizes, tabletImageSizes, mobileImageSizes];
				//set the current size of the content based on what size screen was loaded
				currentSize = imageResizingArr[x];
				//for each item in the array, call a function which will sort through the data of the array
				for(var resizeNumber = 0; resizeNumber < desktopImageSizes.length; resizeNumber++) resizeImages(resizeNumber,currentSize[resizeNumber]);
			}
			// if on a touch screen
			else if (has_touch || isTablet || isMobile){
				//load tablet array
				if(isTablet){
					backgroundWSize = $('#homepage').width()/backgroundWImageResizerArr[2], backgroundHSize = $('#homepage').height()/backgroundHImageResizerArr[2];
					tabletImageSizes = [0.65,.42,1.78,1.75,2.3,1.77,1.4,1.375,backgroundHSize*4,backgroundWSize*4,backgroundWSize,backgroundHSize * 1.8,backgroundWSize * 2];
					currentSize = tabletImageSizes[x];
				}
				//load mobile array
				else{ //isMobile
					backgroundWSize = $('#homepage').width()/backgroundWImageResizerArr[3], backgroundHSize = $('#homepage').height()/backgroundHImageResizerArr[3];
					mobileImageSizes = [.22,.42,1.78,1.635,8,1.66,1.348,1.375,backgroundHSize*4,backgroundWSize*4,backgroundWSize,backgroundHSize * 1.8,backgroundWSize,1.348];
					currentSize = mobileImageSizes[x];
				}
				//for each item in the array, call a function which will sort through the data of the array
				for(var resizeNumber = 0; resizeNumber < desktopImageSizes.length; resizeNumber++) resizeImages(resizeNumber,currentSize[resizeNumber]);
			    //write code that hides gifs and reveals iframes once all videos have been loaded in.
			}
		}

		//** SORT POSITION DATA FROM ARRAY AND ASSIGN NEW ELEMENT POSITIONS**//
		function resizeImages(resizedNumber, newSize){
			//store chosen array data in a new array
			imageSizeVariables[resizedNumber] = newSize;
			//set the height of all the content
		    navHeight = [imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[8], imageSizeVariables[11], imageSizeVariables[11], imageSizeVariables[8]];
			//set the width of all the content
			navWidth = [imageSizeVariables[9], imageSizeVariables[9], imageSizeVariables[9], imageSizeVariables[9], imageSizeVariables[10], imageSizeVariables[9], imageSizeVariables[9], imageSizeVariables[10]]; 
			//set the margin left
			navMarginLeft = [windowSizeWidth/imageSizeVariables[4], windowSizeWidth*imageSizeVariables[5], windowSizeWidth/imageSizeVariables[4], windowSizeWidth*imageSizeVariables[5], windowSizeWidth*imageSizeVariables[6], windowSizeWidth*imageSizeVariables[1], windowSizeWidth*imageSizeVariables[2], windowSizeWidth*imageSizeVariables[6]];
			//set the margin top of all the content
			navMarginTop = [windowSizeHeight*imageSizeVariables[0], windowSizeHeight*imageSizeVariables[0], windowSizeHeight*imageSizeVariables[3], windowSizeHeight*imageSizeVariables[3], windowSizeHeight*imageSizeVariables[0], windowSizeHeight*imageSizeVariables[7], windowSizeHeight*imageSizeVariables[7], windowSizeHeight*imageSizeVariables[3]];
		}
		//set the size of the background image based on the screen size
	    $('.backgroundImage').css({'width':backgroundWSize +'px ', 'height':backgroundHSize+ 'px'});
	 	//get size of the outer btn holder for calculations on vertical/horizontal centering
	    outerBtnHolderWSize = $('#outerBtnHolder').width(), outerBtnHolderHSize = $('#outerBtnHolder').height(), innerBtnHolderHSize = $('#innerBtnHolder').height(), middleImagesHeight = $('#middleImages').height(); 
	    //calculate the horizontal center
		divCenter = ($(window).width() - outerBtnHolderWSize)/2;
		//calculate the vertical center
	    outerBtnHolderTop = ($('#homepage').height()-$('#outerBtnHolder').height())/2, innerBtnHolderTop = (outerBtnHolderHSize-innerBtnHolderHSize)/2;  
	    // Selected page background image grows by 1.2 times its current size and other pages have their size divided by 1.8
		growBackgroundWSize = backgroundWSize*1.3, shrinkBackgroundWSize = backgroundWSize/1.9;
    	//if a video hasn't been clicked and the browser window is resized
	    if(clickedVideo == false){
	    	//reset and re-center all postions of all content
		    $('#outerBtnHolder').css({'width': '', 'height': '', 'top':outerBtnHolderTop+'px','margin-left':'', 'margin-right':'', 'left':'', 'right':''}), $('#innerBtnHolder').css({'width':'', 'height': '','margin-left':'', 'margin-right':'', 'left':'', 'right':'','top':innerBtnHolderTop,'bottom':''});
		    //for each portfolio item on the page, call a function that will resize them based on screen size
	    	for(var portNumber = 0;portNumber<navMarginLeft.length;portNumber++) resizePortfolio(portNumber);
	    	
	    	//** RESIZE ALL CONTENT**//
			function resizePortfolio(portfolioNumber){
				$('#portfolio'+ (portfolioNumber+1) +'page').css({'height':navHeight[portfolioNumber] +'px', 'width':navWidth[portfolioNumber] +'px', 'margin-left': navMarginLeft[portfolioNumber] +'px', 'margin-top': navMarginTop[portfolioNumber] +'px'});		
			}

			//center the middle two portfolio items
		    $('#middleImages').css({'top':(innerBtnHolderHSize - middleImagesHeight)/2 +'px '});
		    //reveal social media buttons
		    if(lastScrolled != "newUser") $( "#linksTop, #linksBottom" ).stop().animate({'opacity': 1});
			//if resize the browser window whilst scrolled over a menu item then activate complete home page reset
			if(isHover!= 'container') resetToHome('reset');
	    }else{
	    	//if video has been clicked and page then resized
	    }
		//if there is a video that can be played, the window size is for desktops and if the use has just loaded the page then play video. 
		if(!!v.canPlayType == true && windowSizeWidth > 1024 && lastScrolled == "newUser") staticHome(); //change this to animateHome when not in dev mode
		//else load the page without video
		else if(!!v.canPlayType == false || windowSizeWidth < 1024) staticHome();
	}

	// on mouse over of navigation button
	$(".animatingPage").mouseenter(function(){
	    isHover = $(this).attr('id');
	    //Detect what navigation button is being hovered, move the background to center the selected page 
	    for(var pageNumber = 0;pageNumber<portfolioMovePosX.length+1;pageNumber++) if(isHover == 'portfolio'+pageNumber+'page' && lastScrolled != '') scrollPortfolio(isHover, pageNumber-1);	   
	});
	//on mouse click
	$(".animatingPage").click(function(){
		//open the selected portfolio item
		for(var pageNumber = 0;pageNumber<portfolioMovePosX.length+1;pageNumber++) if(isHover == 'portfolio'+pageNumber+'page' && lastScrolled != '') openPortfolio(isHover);	
	});

	//on mouse out of navigation button
	$(".animatingPage").mouseleave(function(){ resetToHome(isHover); });

	//** RESET TO HOME POSITION **//
	function resetToHome(lastPage){
		// if browser is above 1024 (is a desktop) and a video hasn't been clicked
		if(clickedVideo == false && windowSizeWidth > 1024){
			// Get the page that was just scrolled out and shrink its background image to its normal size
		    $(lastScrolled).removeClass("staticImage").addClass("backgroundImage");
		    // $(lastScrolled + 'page .content').stop().animate({"opacity":0});
			$('.videoContainer').stop().animate({"opacity": 0});
			//if videos are loaded then pause all of them
			if(isReady == true) pauseAllVideos();
			//if you've just scrolled out of a nav button
			if(lastPage != 'reset' && lastScrolled != ''){
				// animation starts
			    isAnimating = true;
				$(".backgroundImage").stop().animate({'width': backgroundWSize+'px'});
				//Hide the scrolled out pages content back to opacity 0
			    $('#' +lastPage + ' .content').stop().animate({'opacity': 0});
				//Make the container holding the nav buttons go back to its original size and position
				$('#middleImages').stop().animate({'top':(innerBtnHolderHSize - middleImagesHeight)/2 +'px'});
				$('#innerBtnHolder').stop().animate({'top':innerBtnHolderTop +'px'});
				$('#outerBtnHolder').stop().animate({'width': outerBtnHolderWSize +'px', 'height': outerBtnHolderHSize+'px','margin-right':'','margin-left':divCenter+'px', 'top':outerBtnHolderTop+'px'}); 
				$( "#linksTop, #linksBottom" ).stop().animate({'opacity': 1});
				//if another navigation item isn't selected, then set hover state to container and animate by normal mouse position
			    for(var pageNumber = 1;pageNumber<8;pageNumber++){
					if(isHover != 'portfolio'+pageNumber+'page'){ 
						isHover = 'container';
				        $('#container').stop().animate({'margin-left': currentPosX+'px', 'margin-top': currentPosY+'px'},{complete: function(){ isAnimating=false; }});
					}
				}
			//if you've just resized the screen.
			}else{
			    $('#container').css({'opacity': 0, 'margin-left': currentPosX+'px', 'margin-top': currentPosY+'px'});
			    // $(lastScrolled).css({"opacity":1});
			    setTimeout(function(){
				    isAnimating=false;
				    $(lastScrolled + 'page .content').css({'opacity':0});
				    // $('.videoContainer').css({"opacity": 0});
				    $('#container').css({'opacity': '1', 'margin-left': currentPosX+'px', 'margin-top': currentPosY+'px'});
				    isHover='container';
				    checkPositions();
				    console.log("reset");
				    // lastScrolled = '';
				}, 50);		    
			}
		//if a video has been clicked and then you resize the screen, then return to the standard screen navigation
		} else isHover = 'container';
	}
});




//** MOUSE MOVEMENT NAVIGATION **//

// prevent touch screen from srolling	
$(document).bind('touchmove', function(e) {
	e.preventDefault();
});

//check size of browser + mouse position and move background accordingly
function checkWidth() {
	//restraining the movement of the background so that it the browser size
	var restrainedBrowserHeight = movementStrength / $(window).height();
	var restrainedBrowserWidth = movementStrength / $(window).width();
	
    //set current position of browser as negative ints, so it can be used to moved via css
    //windowSize variables are referenced from homepage.js
    windowSizeWidth = $(window).width();
    windowSizeHeight = $(window).height();
    var backgroundCurrentYPos = -windowSizeHeight;
	var backgroundCurrentXPos = -windowSizeWidth;

	//creates a pace which is a half of the users mouse speed: currentMousePosX = current mouse position - (window width / 2)
	var currentMousePosY = y - ($(window).height() / 2);	        
	var currentMousePosX = x - ($(window).width() / 2);

	//decides position: move background down by ((10 / height of browser) * (currentMousePosY speed)) + (the negative height of the browser)
	var newBackgroundPosX = restrainedBrowserWidth * currentMousePosX * -1 + backgroundCurrentXPos;
    var newBackgroundPosY = restrainedBrowserHeight * currentMousePosY * -1 + backgroundCurrentYPos;	  
	
	// // set view port as browser size (prevent mobile devices from scrolling)
	// $('#viewport').css({'height':windowSizeHeight +'px ', 'width':windowSizeWidth + 'px'});

	//send values to other js files that control each page
	if(lastScrolled != "newUser"){
		$(function() { 
		    updatePosition(newBackgroundPosX,newBackgroundPosY);
		});
	}
}	
// Execute on load
checkWidth();
// Bind event listener
$(window).resize(checkWidth);
//if mobile device make background move with accelerometer data
if(has_touch){
	window.addEventListener('devicemotion', deviceMotionHandler, false);
    function deviceMotionHandler(eventData) {
		// $('#container').css({'background-color': 'red'});
   		//check size of browser and decide background position every time accelerometer data comes in
  		checkWidth();
  		//reduce strength of movement on mobile
  		movementStrength = 3;
  		//if landscape reverse y & x values and multiply the data to compensate for screen size, else remain normal
	  	var deviceY = (Math.round(event.accelerationIncludingGravity.y)) * ($('.backgroundImage').height()*3);
	  	var deviceX = (Math.round(event.accelerationIncludingGravity.x)) * ($('.backgroundImage').width()*2);
        if ($(window).height() < $(window).width()) {
	        deviceY = (Math.round(event.accelerationIncludingGravity.x) * $('.backgroundImage').width());
	        deviceX = (Math.round(event.accelerationIncludingGravity.y) * $('.backgroundImage').height()*6);
        }
        //change mouse position to accelerometer data in the checkWidth() function
         x = deviceX;	         
     	 y = deviceY; 
    };
} else {
	//if desktop then use mouse pos to move background
	$("body").mousemove(function(e){
	   	  checkWidth();
   	      //x & y = mouse position    
          x = e.pageX;	     
          y = e.pageY;		
	});
}   

function updatePosition(posX, posY) {
    //move background container based on mouse positions
	currentPosX = posX;
	currentPosY = posY; 
	portfolioMovePosX = [currentPosX/1.2+'px', currentPosX*1.16+'px', currentPosX/1.2+'px', currentPosX*1.16+'px', currentPosX+'px', currentPosX/1.3+'px', currentPosX*1.24+'px', currentPosX+'px'];
	portfolioMovePosY = [currentPosY*.7+'px', currentPosY*.7+'px', currentPosY*1.3+'px', currentPosY*1.3+'px', currentPosY*.6+'px', currentPosY+'px', currentPosY+'px', currentPosY*1.4+'px'];
	//if animation between navigation buttons isn't happening 
	if (isAnimating == false && clickedVideo == false && windowSizeHeight >500){
		//detect what navigation button is being scrolled over and adjust maths mouse position accordingly
		for(var pageNumber = 0;pageNumber<portfolioMovePosX.length+1;pageNumber++) if(isHover == 'portfolio'+pageNumber+'page' && lastScrolled != '') scrollingPage(isHover, pageNumber-1)

		function scrollingPage(currentHover, posMovement){
			if(windowSizeWidth > 1024) $('#container').css({'margin-left': portfolioMovePosX[posMovement], 'margin-top': portfolioMovePosY[posMovement]});
		}
		//if not hovering on a nav button
		if(isHover == 'container' || windowSizeWidth < 1024) {
			//animate based on normal mouse position
			$('#container').css({'opacity': 1,'margin-left': posX+'px', 'margin-top': posY+'px'});
			//clear any inline styles on navigation images that were created with js
	        $('.backgroundImage').css({'width': backgroundWSize + 'px', 'height': backgroundHSize + 'px'});
	        $('#innerBtnHolder').css({'width':'', 'height': '','margin-left':'', 'margin-right':'', 'left':'', 'right':'','top':innerBtnHolderTop,'bottom':''}); 
	        if(isHover == 'container') lastScrolled = 'container';
		}
	}
}




//** START ON STATIC SCREEN **//
function staticHome(){
	// hide video
	console.log('static home triggered');
	$('video').css({'display': 'none'});
	//add a background image to the home page
	$("#centerImage").addClass("designBackground");	
	//reset all nav button positions
	$('#topImage, #bottomImage, #portfolio1, #portfolio2, #portfolio3, #portfolio4, #portfolio5, #portfolio6, #portfolio7, #portfolio8').css({'top': '', 'left': '', 'right':'', 'bottom': '', 'opacity': ''});
	//activate navigation movement by clearing lastScrolled and resetting isHover + isAnimating
	lastScrolled = '';
	isHover = 'container';
	isAnimating = false;
	//allow nav buttons to be scrolled over by revealing the scroll buttons
	$('.animatingPage').css({'display':''});
	console.log("static home");
}

//** START ON ANIMATED SCREEN **//
function animateHome(){
	console.log('video play');
	// set video height to half the page
	var videoHeight = ($('#centerImage').height()-($('#centerImage').height()*.7))/2;
	//disable nav movement
	$('.animatingPage').css({'display':'none'});
	//hide nav button graphics
	$('#topImage').css({'top':'35%', 'opacity':'0'});
	$('#portfolio1').css({'top':'40%', 'left':'40%', 'opacity':0});
	$('#portfolio2').css({'top':'40%', 'right':'40%', 'opacity':0});
	$('#portfolio3').css({'bottom':'40%', 'left':'40%', 'opacity':0});
	$('#portfolio4').css({'bottom':'40%', 'right':'40%', 'opacity':0});
	$('#portfolio6').css({'left':'40%', 'opacity':0});
	$('#portfolio7').css({'right':'40%', 'opacity':0});
	$('#bottomImage').css({'bottom':'35%', 'opacity':0});
	console.log("animate home");
	//if for whatever reason the video gets paused at any point before finishing, then go to a static screen
	if($("video").get(0).paused != true) staticHome();
	else{
		//set video height and if the video is completed
		$('video').css({'top':videoHeight + 'px'}).on('ended',function(){

	      console.log('Video has ended!');
	      //animate all the nav buttons to their correct positions	  
		  $('#topImage').stop().animate({'top': '0', 'left': '0', 'opacity': 1}, 500);
		  $('#portfolio1').stop().animate({'top':'', 'left':'', 'opacity':1}, 500);
		  $('#portfolio2').stop().animate({'top':'', 'right':'', 'opacity':1}, 500);
		  $('#portfolio3').stop().animate({'bottom':'', 'left':'', 'opacity':1}, 500);
		  $('#portfolio4').stop().animate({'bottom':'', 'right':'', 'opacity':1}, 500);
		  $('#portfolio6').stop().animate({'left': '0', 'opacity': 1}, 500);
		  $('#portfolio7').stop().animate({'right': '0', 'opacity': 1}, 500);
		  $('#bottomImage').stop().animate({'bottom': '0', 'opacity': 1},500);

		  //reset all variables so that navigation scrolling will work
		  lastScrolled = '';
		  isHover = 'container';
		  isAnimating = false;
		  //after a second, make the social links animate in
		  setTimeout(function(){
		    $( "#linksTop, #linksBottom" ).stop().animate({'opacity': 1});
		    $('.animatingPage').css({'display':'block'});
		  }, 1000);		
			
	    });
	}
}
//** SCROLLING FUNCTION **//
function scrollPortfolio(hovered, posmovement){
    //Change the math movement to match what navigation page the user has chosen
    //Once the selected page has animated to its defined position, set animation to false
    //set last scrolled to the div that has just been hovered over
	lastScrolled = '#' + hovered.substring(0,10);
	//if the windowsize is desktop, mouse positions values are there, the height of the browser is over 500 and a video hasnt been clicked
	if(windowSizeWidth > 1024 && isNaN(currentPosX) == false && windowSizeHeight >500 && clickedVideo == false){
		//set animation to true
		isAnimating = true;
		//animate the container to the position of the item which was scrolled over
		$('#container').stop().animate({'margin-left': portfolioMovePosX[posmovement], 'margin-top': portfolioMovePosY[posmovement]},{complete: function(){isAnimating=false;}});
		//add a class which will alow that div to grow
		$(lastScrolled).removeClass("backgroundImage").addClass("staticImage");
		//Make the selected pages' content appear
		$(lastScrolled + 'page .content').stop().animate({'opacity': 1});
		//Make the selected pages background image grow
		$(".staticImage").stop().animate({'width': growBackgroundWSize+'px'},{complete: function(){
			//once the image has grown and if the videos have been loaded, then animate the video in.
			if(isReady == true) animateIn();
		}}); 
		//Loop through all other pages and shrink them
		$( ".backgroundImage" ).stop().animate({'width': shrinkBackgroundWSize+'px'});
    	$( "#linksTop, #linksBottom" ).stop().animate({'opacity': 0});
	}
}

//** ANIMATING VIDEOS ON SCROLL OVER **//
function animateIn(){
	//set the last video to what you've just scrolled over
	lastVideo = (lastScrolled.substr(lastScrolled.length - 1))-1;
	//play the selected video
	players[lastVideo].playVideo();
	//if the video is playing and it is currently hidden, then animate it in.
	if (myPlayerState == 1 && $("#" + isHover + " .videoContainer").css('opacity') === '0') $("#" + isHover + " .videoContainer").stop().animate({'opacity': 1});	
}

//** OPEN VIDEO **//
function openPortfolio(clicked){
	console.log("clicked = " + clicked);
	//if a video hasn't been clicked yet, the videos have been loaded and the screen height is over 500
	if(clickedVideo == false && isReady == true && windowSizeHeight > 500){
		console.log(lastScrolled);
		//set the last video to what you've just scrolled over
		lastVideo = (lastScrolled.substr(lastScrolled.length - 1))-1;
		console.log(lastVideo);
		//set up a variable which will be able to full screen the selected video
		var videoClicked = document.getElementById("player"+ (lastVideo + 1));
		console.log(videoClicked);
		//full screen the selected video
		fullScreen(videoClicked);
		//set boolean to true to stop other unwanted functions from activating
		clickedVideo = true;
	}
}

